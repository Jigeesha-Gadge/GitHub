package json;

import java.io.FileWriter;
import java.io.IOException;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;

import org.json.simple.JSONObject;

public class data_db_json {

	public static void main(String[] args) throws SQLException {

		String url = "jdbc:postgresql://localhost:5432/demo";
	    String user = "postgres";
	    String password = "postgres";
	    
	    Connection con= DriverManager.getConnection(url, user, password);
	    //System.out.println("connection done");
	    String select_sql= "select * from json;";
	    PreparedStatement pstn = con.prepareStatement(select_sql);
		System.out.println(pstn);
        ResultSet rs = pstn.executeQuery();
        int i=1;
        try {
            FileWriter file = new FileWriter("/home/endloss/Desktop/data_db_json.json");
        while (rs.next()) {
        	String ip=rs.getString("Server_IP");
        	int status=rs.getInt("Status");
        	int at=rs.getInt("Actual_Timer");
        	int st=rs.getInt("Set_Timer");
        	
        	System.out.println("Server_IP: "+ip);
        	System.out.println("Status: "+status);
        	System.out.println("Actual_Timer: "+at);
        	System.out.println("Set_Timer: "+st);
        	
        	System.out.println("____________________________");
        	System.out.println(i);
        	i++;
        	 JSONObject jsonObject = new JSONObject();
             jsonObject.put("Server_IP",ip);
             jsonObject.put("Status",status);
             jsonObject.put("Actual_Timer",at);
             jsonObject.put("Set_Timer",st);
             
             
               // file.write(jsonObject.toJSONString());
               
             //System.out.println("JSON file created: "+jsonObject);
          }
        file.close();
        } catch (IOException e) {
           // TODO Auto-generated catch block
           e.printStackTrace();
        }
        }
     

}




-------------------------------------------

package json;

import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.IOException;
import java.util.Iterator;

import org.json.simple.JSONArray;
import org.json.simple.JSONObject;
import org.json.simple.parser.*;

public class read_data {
public static void main(String[] args) throws FileNotFoundException, IOException, ParseException {

    JSONParser parser = new JSONParser();
    JSONArray jsonArray = (JSONArray) parser.parse(new FileReader("/home/endloss/Downloads/data.json"));
    
    
    
    for (Object o : jsonArray) {
       
    	JSONObject person = (JSONObject) o;
        
    	
    	if(person.get("Server IP") == null)
        {
     	  
        }
        else
        {
        	String ip = (String) person.get("Server IP");
        	System.out.println("Server IP: " + ip); 
        	
        	if(person.get("Status") == null)
            {
         	   //System.out.println("-----");
            }
            else
            {
            	long Status = (long) person.get("Status");
            	System.out.println("Status: " + Status); 
            	
            	if(person.get("Actual Timer") == null)
                {
             	 //  System.out.println("-----");
            		if(person.get("Set Timer") == null)
                    {
                 	   //System.out.println("-----");
                    }
                    else
                    {
                    	long st = (long) person.get("Set Timer");
                    	System.out.println("Set Timer: " + st); 
                    }
                }
                else
                {
                	 long at = (long) person.get("Actual Timer");
                	System.out.println("Actual Timer: " + at); 
                	
                	if(person.get("Set Timer") == null)
                    {
                 	   
                    }
                    else
                    {
                    	long st = (long) person.get("Set Timer");
                    	System.out.println("Set Timer: " + st); 
                    }
                }
            }
        }
    	System.out.println("_______________________________");  
        
    } 
    


    } 

}


-----------------------------------------

package json;

import java.io.*;
import java.util.ArrayList;
import java.util.Iterator;
import java.util.Scanner;

import org.json.simple.JSONArray;
import org.json.simple.JSONObject;
import org.json.simple.parser.JSONParser;
import org.json.simple.parser.ParseException;

public class read_dataa {
private static String filename;

public static void main(String[] args) throws IOException, ParseException {
	//public static void main(String[] args) {
	
	//JSONArray a = (JSONArray)JSONParser().parse(new FileReader("/home/endloss/Downloads/dataa_test.json"));

	 // parsing file "JSONExample.json"
   // Object obj = new JSONParser().parse(new FileReader("/home/endloss/Downloads/dataa_test.json"));
      
    // typecasting obj to JSONObject
   // JSONObject jo = (JSONObject) obj;
      

    JSONParser parser = new JSONParser();
    JSONArray jsonArray = (JSONArray) parser.parse(new FileReader("/home/endloss/Downloads/dataa.json"));
    int i=1;
    for (Object o : jsonArray) {
        JSONObject person = (JSONObject) o;

        System.out.println("-----------------------------");
        System.out.println("output: "+i);
        System.out.println("-----------------------------");
        
        String ip = (String) person.get("IP");
        System.out.println("IP: " + ip);

        String unitid = (String) person.get("unitid");
        System.out.println("unitid: " + unitid);

        String port = (String) person.get("port");
        System.out.println("port: " + port);
        
        
        JSONArray arrays = (JSONArray) person.get("work");
        for (Object object : arrays) {
        	
//        	for (Object o1 : arrays) {
//                JSONObject person1 = (JSONObject) o1;
                
                //String method = (String) person.get("method");
               // System.out.println("method: " + method);
                 
                
                System.out.println("work: " + object);
              
//        	}
        	
        }
        i++;
//        String strJob = (String) person.get("job");
//        System.out.println("Job::::" + strJob);
//        System.out.println();
        
        

    }


}

}

-------------------------
package json;

import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.IOException;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.SQLException;
import java.sql.Types;

import org.json.simple.JSONArray;
import org.json.simple.JSONObject;
import org.json.simple.parser.*;
public class write_data {
public static void main(String[] args) throws FileNotFoundException, IOException, ParseException, SQLException{
	
	 	String url = "jdbc:postgresql://localhost:5432/demo";
	    String user = "postgres";
	    String password = "postgres";
	 
	    JSONParser parser = new JSONParser();
	    JSONArray jsonArray = (JSONArray) parser.parse(new FileReader("/home/endloss/Downloads/data.json"));
	    
	    
	    int i=1;
	    for (Object o : jsonArray) {
	    	
	       System.out.println("vlaue of  i:"+i);
	    	Connection con= DriverManager.getConnection(url, user, password);
		   // System.out.println("connection done--------------");
		    String insert_sql= "INSERT INTO json VALUES (?, ?, ?, ?);";
		    PreparedStatement pstn = con.prepareStatement(insert_sql);
	    	
	    	JSONObject person = (JSONObject) o;
	        
	    	
	    	if(person.get("Server IP") == null)
	        {
	     	  
	        }
	        else
	        {
	        	String ip = (String) person.get("Server IP");
	        	System.out.println("Server IP: " + ip); 

	    	   
	        	pstn.setString(1, ip);
	        	
	        	
	        	if(person.get("Status") == null)
	            {
	         	   pstn.setNull(2, Types.INTEGER);
	         	  if(person.get("Actual Timer") == null)
	                {
	             	   
	             	   
	            		pstn.setNull(3, Types.INTEGER);
	            		
	            		if(person.get("Set Timer") == null)
	                    {
	            			pstn.setNull(4, Types.INTEGER);
	                 	 
	                    }
	                    else
	                    {
	                    	long st = (long) person.get("Set Timer");
	                    	System.out.println("Set Timer: " + st); 
	                    	pstn.setInt(4, (int) st);
	                    }
	                }
	                else
	                {
	                	long at = (long) person.get("Actual Timer");
	                	System.out.println("Actual Timer: " + at); 
	                	pstn.setInt(3, (int) at);
	                	
	                	if(person.get("Set Timer") == null)
	                    {
	                		pstn.setNull(4, Types.INTEGER);
	                 	
	                    }
	                    else
	                    {
	                    	long st = (long) person.get("Set Timer");
	                    	pstn.setInt(4, (int) st);
	                        System.out.println("Set Timer: " + st); 
	                    }
	                } 
	         	   
	            }
	            else
	            {
	            	long Status = (long) person.get("Status");
	            	System.out.println("Status: " + Status); 
	            	pstn.setInt(2, (int) Status);
	            	
	            	if(person.get("Actual Timer") == null)
	                {
	             	  
	             	   
	            		pstn.setNull(3, Types.INTEGER);
	            		
	            		if(person.get("Set Timer") == null)
	                    {
	            			pstn.setNull(4, Types.INTEGER);
	                 	  
	                    }
	                    else
	                    {
	                    	long st = (long) person.get("Set Timer");
	                    	System.out.println("Set Timer: " + st); 
	                    	pstn.setInt(4, (int) st);
	                    }
	                }
	                else
	                {
	                	long at = (long) person.get("Actual Timer");
	                	System.out.println("Actual Timer: " + at); 
	                	pstn.setInt(3, (int) at);
	                	
	                	if(person.get("Set Timer") == null)
	                    {
	                		pstn.setNull(4, Types.INTEGER);
	                 	
	                    }
	                    else
	                    {
	                    	long st = (long) person.get("Set Timer");
	                    	pstn.setInt(4, (int) st);
	                        System.out.println("Set Timer: " + st); 
	                    }
	                }
	            }
	        }
	    	 pstn.executeUpdate();	   
	    	 i++;
	    } 
	    
	   

	    } 

}

